# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-18.04

steps:
- script: |
    set -o xtrace
    export VCPKG_ROOT=/usr/local/share/pxmc3000/vcpkg
    export SMPDATAAGENT_ROOT=/usr/local/share/pxmc3000/SmpDataAgent
    export PXMC_ROOT=/usr/local/share/pxmc3000
    export SOURCE_ROOT=/home/vsts/work/1/s/
    if [ ! -d $VCPKG_ROOT ]; then 
      sudo install -D -d -o $(whoami) -g $(id -Gn) $VCPKG_ROOT
    fi
    if [ ! -d $SMPDATAAGENT_ROOT ]; then 
      sudo install -D -d -o $(whoami) -g $(id -Gn) $SMPDATAAGENT_ROOT
    fi
    cd $PXMC_ROOT
    git clone https://github.com/Microsoft/vcpkg
    cd vcpkg
    ./bootstrap-vcpkg.sh -disableMetrics
    ./vcpkg integrate install --vcpkg-root $VCPKG_ROOT
    ./vcpkg @$SOURCE_ROOT/SmpDataAgent/vcpkg_ref.txt --vcpkg-root $VCPKG_ROOT
  displayName: 'Prepare the environment & VCPKG packages'
- script: |
    echo installing packages with apt ...
    sudo apt install -y ninja-build cmake libcurl4-openssl-dev
  displayName: 'Install required package - apt'
- script: |
    set -o xtrace
    cmake /home/vsts/work/1/s/  --preset linux-debug -DCMAKE_TOOLCHAIN_FILE:FILEPATH="/usr/local/share/pxmc3000/vcpkg/scripts/buildsystems/vcpkg.cmake"
    cmake --build /usr/local/share/pxmc3000/SmpDataAgent/bin/linux-debug --config Release
  displayName: 'Cmake build'
- script: |
    set -o xtrace
    cp /usr/local/share/pxmc3000/SmpDataAgent/bin/linux-debug/SmpDataAgent/SmpDataAgent /home/vsts/work/1/a/SmpDataAgent
  displayName: 'Copy binaries'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'SmpDataAgent'
    publishLocation: 'Container'
  displayName: 'Publish Binarie'